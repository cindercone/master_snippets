heroku run rake widget:bind_nested -a [APPNAME]

<!-- TURN DOWN FOR WHAT? -->
websites = Website.all.map(&:urn)
websites.each {|a| puts a } ; nil

heroku dyno:type free -a

heroku run console -a 

websites = Website.all.map(&:urn) {|a| [truncate(websites, :length => 10, :omission => ''), webdsites} 


<!--ADD SSL CERT-->

heroku join -a g5-hub

heroku addons:create ssl:endpoint -a g5-clw-6mfp7ht-tiger-self-stor

heroku certs:add www_tigerselfstorage_com.pem www_tigerselfstorage_com_server.key  -a g5-clw-6mfp7ht-tiger-self-stor


<!--CMS Vanity-->

heroku certs:add g5dxm_ssl-bundle.crt g5dxm_server.key -a g5-cms-i7m5g85s-top-shelf-stor


<!--REMOVE SSL CERT-->

heroku certs:remove -a g5-clw-6mfp7ht-tiger-self-stor

heroku addons:destroy ssl:endpoint -a g5-clw-6mfp7ht-tiger-self-stor


<!--ADD/UPGRADE DATABASE TO CMS-->

g5-cms-imfcm58p-mf-seed-testin

heroku addons:add heroku-postgresql:hobby-basic -a g5-cms-imfcm58p-mf-seed-testin

heroku pg:wait -a  g5-cms-imfcm58p-mf-seed-testin

heroku maintenance:on -a g5-clw-6l9lf3y-laurel-court-ap

heroku ps:scale worker=0 -a g5-cms-imfcm58p-mf-seed-testin

heroku pg:copy DATABASE_URL HEROKU_POSTGRESQL_AQUA_URL -a g5-cms-imfcm58p-mf-seed-testin

heroku pg:promote HEROKU_POSTGRESQL_AQUA -a g5-cms-imfcm58p-mf-seed-testin

heroku ps:scale worker=1 -a g5-cms-imfcm58p-mf-seed-testin

heroku maintenance:off -a g5-cms-imfcm58p-mf-seed-testin

heroku pg:backups schedule --at '02:00 America/Los_Angeles' HEROKU_POSTGRESQL_AQUA --app g5-cms-imfcm58p-mf-seed-testin



g5-cl-5351gp2m2-the-springs-at-anna-maria

<!--delete a location from the hub-->

heroku run console -a g5-hub
l = Location.where(urn: "g5-cl-54ooz0lge-another-test")
l.first.delete

<!-- delete a website from a cms -->

heroku run console -a g5-cms-1tick0r7-vision-health
w = Website.where(urn: "g5-clw-6ncpj7u-another-test")
w.first.delete

<!-- seed website from location -->

heroku run rake website:seed[g5-cl-54ooz0lge-another-test] -a g5-cms-igs7hgsf-g5-concierge-s

<!-- NGINX -->

bundle exec cap production nginx:configtest

bundle exec cap production nginx:reload

<!-- Resque workers -->
runs the converter job
heroku run rake widget:convert_nav


<!-- SIDEKIQ -->
The config vars needed for a CMS on Sidekiq

REDIS_PROVIDER=REDISTOGO_URL
HEROKU_APP=[insert app urn here]
HEROKU_ACCESS_TOKEN = 8ed252db-2ae5-424a-b207-a7e94883257e
8ed252db-2ae5-424a-b207-a7e94883257e is also identical to existing config var named â€œHEROKU_API_KEY"


bundle exec cap demo g5:deploy_template_paths domains=missionrock-location revision=bathrooms

<!-- Adding multiple lines of redirects to a site_redirects config var in the cms -->
heroku config:set SITE_REDIRECTS="$(cat radiant_redirects.txt)" -a g5-cms-i8m5pjk5-radiant-senior


Add /api/v1/locations to the end of a cms to see json view of data


NEW CMS forms aren't loading
heroku run rake g5_forms_updatable:load_for_client -a [CLS_APP_URN]


Location.count
Website.count
websites = Website.all.map(&:urn)
locations = Location.all.map{|loc|puts loc.name}
locations = Location.all.map{|loc| loc.website.urn}
websites-locations
toasty = Website.where(urn:"g5-clw-1tsi1ddv-mission-rock-single")
toasty.first.delete


l = Location.where(urn:"g5-cl-565xf39bg-metro-self-storage-mableton")

ssh util /data/g5clients/current/gscapts.com/

websites = Website.all.map(&:urn)
websites.each {|a| puts a } ; nil
       

DELETING A ROW FROM THE PROVISIONER
repo = Repo.where(name: "g5-clw-6l522ni-marq-at-rino").first
repo.domains.map {|d| DomainProvisioner.unlink(repo.name, d.name) }
repo.destroy

d = Location.where(domain:"www.cedarbrookseniorliving.com")
toasty = d.locations.each.map {|d| puts d.domain} ;nil



c = Client.where(urn:"g5-c-i7qkhd3l-compass-pointe-healthcare-system")
toasty = c.locations.each.map {|d| puts d.domain} ;nil
super_toasty = c.locations.each.map {|loc| puts "#{loc.urn} - #{loc.domain}"} ;nil
c.locations.where(status:"Live").each.map {|d| puts d.domain} ;nil
